//777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
//                               			V.W.F Mattana 21128707
//777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
import java.util.*;
//======================================================================================================
//                             						NODE
//======================================================================================================
public class Node
{
	//******************************************************************************************************
	//											DECLARATIONS
	//******************************************************************************************************
	public int[][] grid;
	public int g, h, f;
	public Node parent;
	public ArrayList<Node> children;
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                       DEFAULT CONSTRUCTOR
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public Node()
	{
		grid = new int[1][1];
		g = h = f = -1;
		parent = null;
		children = new ArrayList<Node>();
	}
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                       CUSTOM CONSTRUCTOR
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public Node(int[][] array)
	{
		grid = new int[array.length][];
		copy(array,grid);
		g = h = f = -1;
		parent = null;
		children = new ArrayList<Node>();
	}
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                       CUSTOM CONSTRUCTOR
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public Node(Node newNode)
	{
		Node thisNode = new Node();
		thisNode.copyNode(newNode);
		this.grid = thisNode.getArray();
		this.h = thisNode.getH();
		this.g = thisNode.getG();
		this.f = thisNode.getF();
		this.parent = thisNode.getParent();
		this.children = thisNode.children;
	}
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                       CUSTOM DEEP COPY
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public void copyNode(Node toDup)
	{
		grid = new int[(toDup.getArray()).length][];
		copy(toDup.getArray(),grid);
		g = toDup.getG();
		h = toDup.getH();
		f = toDup.getF();
		parent = toDup.getParent();
		children = toDup.getChildren();
	}
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                         COPY ARRAY	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++	
	public void copy(int[][] arrayA, int[][] arrayB)
	{
		for(int i = 0; i < arrayA.length; i++)
		{
			int[] arrayA1 = arrayA[i];
			int	aLength = arrayA1.length;
			arrayB[i] = new int[aLength];
			System.arraycopy(arrayA1, 0, arrayB[i], 0, aLength);
		}
	}
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                     		 SET G
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public void setG(int x)
	{
		g = x;
	}
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                     		 SET H
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public void setH(int x)
	{
		h = x;
	}
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                      	SET F
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public void setF()
	{
		f = g+h;
	}
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                      	SET Parent
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public void setParent(Node newParent)
	{
		//parent.copyNode(newParent);
		parent = newParent;
	}
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                      	ADD CHILD
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public void addChild(Node newChild)
	{
		children.add(newChild);
	}
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                        SET ARRAY
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public void setArray(int[][] array)
	{
		grid = new int[array.length][];
		copy(array,grid);
	}
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                         GET G
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public int getG()
	{
		return g;
	}
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                         GET H
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public int getH()
	{
		return h;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                         GET F
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public int getF()
	{
		return f;
	}
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                         GET Parent
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public Node getParent()
	{
		return parent;
	}
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                         GET CHILDREN
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public ArrayList<Node> getChildren()
	{
		return children;
	}
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                      GET ARRAY
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public int[][] getArray()
	{
		return grid;
	}
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//                                    EQUAL STATE
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	public boolean equalsArray(Node nodeB)
	{
		return Arrays.deepEquals(grid, nodeB.getArray());

	}
	
	
	
}